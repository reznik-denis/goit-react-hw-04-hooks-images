{"version":3,"sources":["Components/ImageGallery/ImageGallery.module.css","Components/Modal/Modal.module.css","Components/DefaultNotifeImages/DefaultNotifeImages.module.css","Components/ImageGalleryItem/ImageGalleryItem.module.css","Components/LoadMore/LoadMore.module.css","Components/Loader/Loader.module.css","Components/Searchbar/Searchbar.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.jsx","Components/Modal/Modal.jsx","Components/LoadMore/LoadMore.jsx","services/FetchImages.js","Components/Loader/Loader.jsx","Components/DefaultNotifeImages/upps.jpg","Components/DefaultNotifeImages/DefaultNotifeImages.jsx","App.js","index.js","Components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","onSubmit","useState","search","setSearch","reset","className","s","SearchForm","event","preventDefault","trim","toast","error","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","value","onChange","currentTarget","toLowerCase","autoComplete","autoFocus","placeholder","ImageGalleryItem","userImageURL","altImage","src","alt","ImageGalleryItemImage","ImageGallery","pictures","onClick","map","index","webformatURL","largeImageURL","tags","modalRoot","document","querySelector","Modal","onClose","children","useEffect","window","addEventListener","handleKeydown","removeEventListener","e","code","createPortal","Overlay","target","LoadMore","Button","api","fetchImages","pageFetch","fetch","then","res","ok","json","Promise","reject","Error","LoaderSpinner","props","loaderSpinner","color","height","width","DefaultNotifeImages","imageURL","upps","imageClass","defaultNotifeImages","App","picture","setPicture","showModal","setShowModal","loading","setLoading","setError","largeImage","setLargeImage","setAltImage","setPageFetch","fetshSearch","toggleModal","Api","prevState","hits","catch","finally","onLoadMoreSkroll","state","options","top","behavior","pageYOffset","documentElement","clientHeight","setTimeout","scrollTo","massage","userSearch","length","position","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ad8b6c15.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2ByuI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3MLTO\",\"Modal\":\"Modal_Modal__1oIet\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultNotifeImages\":\"DefaultNotifeImages_defaultNotifeImages__3OyQK\",\"imageClass\":\"DefaultNotifeImages_imageClass__3ZsFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2X_lN\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__s-ueM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"LoadMore_Button__BB7Wl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderSpinner\":\"Loader_loaderSpinner__7SLi3\"};","import {useState} from 'react';\r\nimport s from './Searchbar.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function Searchbar ({onSubmit}) {\r\n    const [search, setSearch] = useState('');\r\n   \r\n    const handleChange = event => {\r\n        setSearch(event.currentTarget.value.toLowerCase());\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        \r\n        event.preventDefault();\r\n        if (search.trim() === '') {\r\n            toast.error(\"Введите имя картинки!\");\r\n            return\r\n        }\r\n        onSubmit(search);\r\n        reset();\r\n    };\r\n\r\n    const reset = () => {\r\n        setSearch('');\r\n    };\r\n\r\n    return (<header className={s.Searchbar}>\r\n                <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n                    <button type=\"submit\" className={s.SearchFormButton}>\r\n                        <span className={s.SearchFormButtonLabel}>Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className={s.SearchFormInput}\r\n                        type=\"text\"\r\n                        value={search}\r\n                        onChange={handleChange}\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                    />\r\n                </form>\r\n            </header>\r\n            );\r\n};\r\n\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};","import s from './ImageGalleryItem.module.css';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function ImageGalleryItem({userImageURL, altImage}) {\r\n    return <img src={userImageURL} alt={altImage} className={s.ImageGalleryItemImage} />\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n        userImageURL: PropTypes.string.isRequired,\r\n        altImage: PropTypes.string.isRequired\r\n};","import React from 'react';\r\nimport s from './ImageGallery.module.css';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ImageGallery({ pictures, onClick }) {\r\n    return (<ul className={s.ImageGallery}>\r\n        {pictures && pictures.map(({ webformatURL, largeImageURL, tags }, index) => (<li key={index} className={s.ImageGalleryItem} onClick={() => onClick(largeImageURL, tags)}>\r\n            <ImageGalleryItem userImageURL={webformatURL} altImage={tags}/>\r\n            </li>\r\n            )) \r\n        }\r\n        </ul>);    \r\n};\r\n\r\nImageGallery.propTypes = {\r\n    pictures: PropTypes.arrayOf(PropTypes.shape({\r\n        webformatURL: PropTypes.string.isRequired,\r\n        largeImageURL: PropTypes.string.isRequired,\r\n        tags: PropTypes.string.isRequired,\r\n    }))\r\n};\r\n","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal ({onClose, children}) {\r\n    useEffect(() => {\r\n       window.addEventListener('keydown', handleKeydown)\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeydown)\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    \r\n    const handleKeydown = e => {\r\n        if (e.code === 'Escape') {\r\n            onClose()\r\n        }\r\n    };\r\n    \r\n    function handleOverleyClick(e) {\r\n        if (e.currentTarget === e.target) {\r\n            onClose();\r\n        }\r\n    }\r\n\r\n    return createPortal(\r\n        <div className={s.Overlay} onClick={handleOverleyClick}>\r\n            <div className={s.Modal}>\r\n                {children}\r\n            </div>\r\n        </div>, modalRoot,);\r\n}\r\n\r\nModal.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    children: PropTypes.element.isRequired\r\n};\r\n","import React from 'react';\r\nimport s from './LoadMore.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function LoadMore({onClick}) {\r\n    return (\r\n        <button type='button' className={s.Button} onClick={() => onClick()}>Load more</button>\r\n    )\r\n}\r\n\r\nLoadMore.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n};","function fetchImages(search, pageFetch) {\r\n    const KEY = '19046001-7d44b7f00f708df4674bb235b';\r\n    const URL = 'https://pixabay.com/api/';\r\n    return fetch(`${URL}?q=${search}&page=${pageFetch}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`)\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(new Error('Картинки с таким именем отсутсвуют'))\r\n        });\r\n}\r\n\r\nconst api = {\r\n    fetchImages\r\n};\r\n\r\nexport default api;\r\n    ","import React from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport s from './Loader.module.css';\r\n\r\nexport default function LoaderSpinner (props) {\r\n    return (<Loader\r\n        className={s.loaderSpinner}\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n    />);\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/upps.1afb9e96.jpg\";","import React from 'react';\r\nimport s from './DefaultNotifeImages.module.css';\r\nimport upps from './upps.jpg';\r\n\r\nexport default function DefaultNotifeImages({imageURL = upps}) {\r\n    return <div><img className={s.imageClass} src={imageURL} alt=\"upps\" width=\"400\"/>  \r\n        <div className={s.defaultNotifeImages}>Картинки с таким именем отсутствуют</div>\r\n    </div>\r\n}","import { useState, useEffect } from 'react';\nimport './App.css';\nimport Searchbar from './Components/Searchbar/Searchbar';\nimport ImageGallery from './Components/ImageGallery/ImageGallery';\nimport Modal from './Components/Modal/Modal';\nimport LoadMore from './Components/LoadMore/LoadMore';\nimport Api from './services/FetchImages';\nimport LoaderSpinner from './Components/Loader/Loader';\nimport DefaultNotifeImages from './Components/DefaultNotifeImages/DefaultNotifeImages';\nimport { ToastContainer } from 'react-toastify';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nfunction App() {\n  const [picture, setPicture] = useState([]);\n  const [search, setSearch] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [largeImage, setLargeImage] = useState('');\n  const [altImage, setAltImage] = useState('');\n  const [pageFetch, setPageFetch] = useState(1);\n\n  useEffect(() => {\n    if (search !== null && search !== '')\n    fetshSearch();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [search]);\n\n  const toggleModal = (largeImageURL, tags) => {\n    setShowModal(!showModal);\n    setLargeImage(largeImageURL);\n    setAltImage(tags);\n  };\n\n  const formSubmitHendler = (userSearch) => {\n    if (userSearch !== search) {\n      setPicture([]);\n      setSearch(userSearch);\n      setPageFetch(1);\n    } else { toast.error(\"Вы уже ввели это имя!\"); };\n  };\n\n  const fetshSearch = () => {\n    setLoading(true);\n    Api.fetchImages(search, pageFetch).then(pictures => {\n      setPicture(prevState => (picture === []) ? pictures.hits : ([...prevState, ...pictures.hits]))\n    }).catch(error => setError(error))\n      .finally(() => {\n        onLoadMoreSkroll();\n        setLoading(false);\n        setPageFetch(state => state + 1)\n      }); \n  }\n\n  const onLoadMoreSkroll = () => {\n    if (pageFetch >= 2) {\n      const options = {\n        top: null,\n        behavior: 'smooth',\n      };\n\n      options.top = window.pageYOffset + document.documentElement.clientHeight;\n      setTimeout(() => {\n        window.scrollTo(options);\n      }, 1000);\n    }\n  };\n    \n  return (\n      <div className=\"App\">\n        {error && <h1>{error.massage}</h1>}\n\n        <Searchbar onSubmit={formSubmitHendler} />\n\n        <ImageGallery\n          pictures={picture}\n          onClick={toggleModal} />\n        \n        {loading && <LoaderSpinner />}\n        \n        {(picture.length !== 0) && (pageFetch >= 2) && <LoadMore onClick={fetshSearch} />}\n\n        {search && picture.length === 0 && loading === false && <DefaultNotifeImages />}\n        \n        {showModal && <Modal onClose={ toggleModal }>\n          <img src={largeImage} alt={altImage}/>\n        </Modal>}\n        \n        <ToastContainer\n          position=\"bottom-right\"\n          autoClose={3000}\n        />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__efAtB\",\"SearchForm\":\"Searchbar_SearchForm__2g2-T\",\"SearchFormButton\":\"Searchbar_SearchFormButton__2Q3l4\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__3jiRi\",\"SearchFormInput\":\"Searchbar_SearchFormInput__GLQgm\"};"],"sourceRoot":""}